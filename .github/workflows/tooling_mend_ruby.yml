# This is a generic workfloww that can be used to scan
# content-and-tooling projects for vulnerabilities.
name: mend

on:
  workflow_call:
    inputs:
      api_key:
        default: ''
        type: string
      token:
        default: ''
        type: string
      product_name:
        default: 'DevX'
        type: string

jobs:
  mend:
    runs-on: "ubuntu-latest"
    continue-on-error: ${{ contains(fromJson('["puppetlabs","puppet-toy-chest"]'), github.repository_owner) != true }}

    steps:
      - id: init
        run: |
          mend_api_key="${{ secrets.MEND_API_KEY != '' && secrets.MEND_API_KEY || inputs.api_key }}"
          mend_token="${{ secrets.MEND_TOKEN != '' && secrets.MEND_TOKEN || inputs.token }}"
          if [[ -z "${mend_api_key}" ]] || [[ -z "${mend_token}" ]] ; then
            echo "::warning::missing required secrets"
            exit 1
          fi
          echo "mend_api_key=${mend_api_key}" >> $GITHUB_OUTPUTS
          echo "mend_token=${mend_api_key}" >> $GITHUB_OUTPUTS
          echo "product_name=${{ vars.PRODUCT_NAME != '' && vars.PRODUCT_NAME || inputs.product_name }}" >> $GITHUB_OUTPUTS

      - name: "checkout"
        if: success()
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 1

      - name: "setup ruby"
        if: success()
        uses: "ruby/setup-ruby@v1"
        with:
          ruby-version: 2.7

      - name: "bundle lock"
        if: success()
        run: bundle lock

      - uses: "actions/setup-java@v4"
        if: success()
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "download"
        if: success()
        run: curl -o wss-unified-agent.jar https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar

      - name: "scan"
        if: success()
        run: java -jar wss-unified-agent.jar
        env:
          WS_APIKEY: ${{ steps.init.outputs.mend_api_key }}
          WS_WSS_URL: https://saas-eu.whitesourcesoftware.com/agent
          WS_USERKEY: ${{ steps.init.outputs.mend_token }}
          WS_PRODUCTNAME: ${{ steps.init.outputs.product_name }}
          WS_PROJECTNAME: ${{ github.event.repository.name }}
