# This is a generic workflow for Puppet module acceptance operations.
name: "Module Acceptance"

on:
  workflow_call:
    inputs:
      runs_on:
        description: "The operating system used for the runner."
        required: false
        default: "ubuntu-latest"
        type: "string"
      matrix:
        description: "The matrix of platforms to test."
        required: false
        default: ''
        type: "string"

jobs:

  setup_matrix:
    if: github.repository_owner == 'puppetlabs'
    name: "Setup Test Matrix"
    runs-on: ${{ inputs.runs_on }}
    outputs:
      acceptance_matrix: ${{ steps.get-matrix.outputs.matrix }}

    steps:

      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup ruby"
        uses: "ruby/setup-ruby@v1"
        with:
          ruby-version: "2.7"
          bundler-cache: true

      - name: "Bundle environment"
        run: |
          echo ::group::bundler environment
          bundle env
          echo ::endgroup::

      - name: Setup Test Matrix
        id: get-matrix
        run: |
          # if no matrix supplied as input, then run matrix_from_metadata_v2
          if [[ -z '${{ inputs.matrix }}' ]]; then
            bundle exec matrix_from_metadata_v2
          else
            echo ${{ inputs.matrix }} >> matrix.json
            echo "matrix=`cat matrix.json`" >> $GITHUB_OUTPUT
          fi

  acceptance:
    if: github.repository_owner == 'puppetlabs'
    name: "Acceptance tests (${{matrix.platforms.label}}, ${{matrix.collection}})"
    needs: "setup_matrix"
    runs-on: ${{ inputs.runs_on }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson( needs.setup_matrix.outputs.acceptance_matrix ) }}

    env:
      PUPPET_GEM_VERSION: '~> 7.24'
      FACTER_GEM_VERSION: 'https://github.com/puppetlabs/facter#main'  # why is this set?

    steps:

      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup ruby"
        uses: "ruby/setup-ruby@v1"
        with:
          ruby-version: "2.7"
          bundler-cache: true

      - name: "Bundle environment"
        run: |
          echo ::group::bundler environment
          bundle env
          echo ::endgroup::

      - name: "Provision environment"
        run: |
          if [[ "${{matrix.platforms.provider}}" == "provision::docker" ]]; then
            DOCKER_RUN_OPTS="docker_run_opts: {'--volume': '/lib/modules/$(uname -r):/lib/modules/$(uname -r)'}"
          else
            DOCKER_RUN_OPTS=''
          fi
          bundle exec rake "litmus:provision[${{matrix.platforms.provider}},${{ matrix.platforms.image }},$DOCKER_RUN_OPTS]"
          # Redact password
          FILE='spec/fixtures/litmus_inventory.yaml'
          sed -e 's/password: .*/password: "[redacted]"/' < $FILE || true

      - name: "Install Puppet agent"
        run: |
          bundle exec rake 'litmus:install_agent[${{ matrix.collection }}]'

      - name: "Install module"
        run: |
          bundle exec rake 'litmus:install_module'

      - name: "Run acceptance tests"
        run: |
          bundle exec rake 'litmus:acceptance:parallel'

      - name: "Remove test environment"
        if: ${{ always() }}
        continue-on-error: true
        run: |
          if [[ -f spec/fixtures/litmus_inventory.yaml ]]; then
            bundle exec rake 'litmus:tear_down'
          fi
